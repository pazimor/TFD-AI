"""Initial schema

Revision ID: 0cdbe6a341e6
Revises:
Create Date: 2025-01-31 00:27:59.250714

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0cdbe6a341e6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=255), nullable=False),
    sa.Column('item_type', sa.String(length=50), nullable=False),
    sa.Column('item_Goals', sa.String(length=50), nullable=False),
    sa.Column('item_capabilities', sa.Text(), nullable=True),
    sa.Column('item_statistiques', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_index(op.f('ix_items_item_id'), 'items', ['item_id'], unique=False)
    op.create_table('modifiers',
    sa.Column('modifier_id', sa.Integer(), nullable=False),
    sa.Column('modifier_name', sa.String(length=255), nullable=False),
    sa.Column('modifier_type', sa.String(length=150), nullable=False),
    sa.Column('modifier_statistiques', sa.String(length=1024), nullable=True),
    sa.Column('modifier_optional_statistiques', sa.String(length=1024), nullable=True),
    sa.Column('modifier_stack_id', sa.String(length=50), nullable=True),
    sa.Column('modifier_stack_description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('modifier_id')
    )
    op.create_index(op.f('ix_modifiers_modifier_id'), 'modifiers', ['modifier_id'], unique=False)
    op.create_table('builds',
    sa.Column('build_id', sa.Integer(), nullable=False),
    sa.Column('build_name', sa.String(length=255), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('score_per_goal', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], ),
    sa.PrimaryKeyConstraint('build_id')
    )
    op.create_index(op.f('ix_builds_build_id'), 'builds', ['build_id'], unique=False)
    op.create_table('build_modifiers',
    sa.Column('build_id', sa.Integer(), nullable=False),
    sa.Column('modifier_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['build_id'], ['builds.build_id'], ),
    sa.ForeignKeyConstraint(['modifier_id'], ['modifiers.modifier_id'], ),
    sa.PrimaryKeyConstraint('build_id', 'modifier_id')
    )

    """Ajoute les procédures stockées à la base de données"""

    # ========== Procedures pour ITEMS ==========
    op.execute("""
        CREATE PROCEDURE AddItem(
            IN p_item_name VARCHAR(255),
            IN p_item_goals VARCHAR(50),
            IN p_item_type VARCHAR(50),
            IN p_item_capabilities TEXT,
            IN p_item_statistiques JSON
        )
        BEGIN
            INSERT INTO items (item_name, item_goals, item_type, item_capabilities, item_statistiques)
            VALUES (p_item_name, p_item_goals, p_item_type, p_item_capabilities, p_item_statistiques);
        END;
        """)

    op.execute("""
        CREATE PROCEDURE GetItem(IN p_item_id INT)
        BEGIN
            SELECT * FROM items WHERE item_id = p_item_id;
        END;
        """)

    op.execute("""
        CREATE PROCEDURE UpdateItem(
            IN p_item_id INT,
            IN p_item_name VARCHAR(255),
            IN p_item_goals VARCHAR(50),
            IN p_item_type VARCHAR(50),
            IN p_item_capabilities TEXT,
            IN p_item_statistiques JSON
        )
        BEGIN
            UPDATE items
            SET item_name = p_item_name, 
                item_goals = p_item_goals, 
                item_type = p_item_type, 
                item_capabilities = p_item_capabilities,
                item_statistiques = p_item_statistiques
            WHERE item_id = p_item_id;
        END;
        """)

    op.execute("""
        CREATE PROCEDURE DeleteItem(IN p_item_id INT)
        BEGIN
            DELETE FROM items WHERE item_id = p_item_id;
        END;
        """)

    # ========== Procedures pour MODIFIERS ==========
    op.execute("""
        CREATE PROCEDURE AddModifier(
            IN p_modifier_id INTEGER,
            IN p_modifier_name VARCHAR(255),
            IN p_modifier_type VARCHAR(150),
            IN p_modifier_statistiques VARCHAR(1024),
            IN p_modifier_stack_id VARCHAR(50),
            IN p_modifier_stack_description TEXT
        )
        BEGIN
            INSERT INTO modifiers (modifier_id, modifier_name, modifier_type, modifier_statistiques, modifier_stack_id, modifier_stack_description)
            VALUES (p_modifier_id, p_modifier_name, p_modifier_type, p_modifier_statistiques, p_modifier_stack_id, p_modifier_stack_description);
        END;
        """)

    op.execute("""
        CREATE PROCEDURE GetModifier(IN p_modifier_id INT)
        BEGIN
            SELECT * FROM modifiers WHERE modifier_id = p_modifier_id;
        END;
        """)

    op.execute("""
        CREATE PROCEDURE UpdateModifier(
            IN p_modifier_id INTEGER,
            IN p_modifier_name VARCHAR(255),
            IN p_modifier_type VARCHAR(150),
            IN p_modifier_statistiques VARCHAR(1024),
            IN p_modifier_stack_id VARCHAR(50),
            IN p_modifier_stack_description TEXT
        )
        BEGIN
            UPDATE modifiers
            SET 
                modifier_name = p_modifier_name,
                modifier_type = p_modifier_type,
                modifier_statistiques = p_modifier_statistiques,
                modifier_stack_id = p_modifier_stack_id,
                modifier_stack_description = p_modifier_stack_description
            WHERE p_modifier_id = modifier_id;
        END;
        """)

    op.execute("""
        CREATE PROCEDURE DeleteModifier(IN p_modifier_id INT)
        BEGIN
            DELETE FROM modifiers WHERE modifier_id = p_modifier_id;
        END;
        """)

    # ========== Procedures pour BUILDS ==========
    op.execute("""
        CREATE PROCEDURE AddBuild(
            IN p_build_name VARCHAR(255),
            IN p_item_id INT,
            IN p_score_per_goal JSON
        )
        BEGIN
            INSERT INTO builds (build_name, item_id, score_per_goal)
            VALUES (p_build_name, p_item_id, p_score_per_goal);
        END;
        """)

    op.execute("""
        CREATE PROCEDURE GetBuild(IN p_build_id INT)
        BEGIN
            SELECT * FROM builds WHERE build_id = p_build_id;
        END;
        """)

    op.execute("""
        CREATE PROCEDURE UpdateBuild(
            IN p_build_id INT,
            IN p_build_name VARCHAR(255),
            IN p_item_id INT,
            IN p_score_per_goal JSON
        )
        BEGIN
            UPDATE builds
            SET build_name = p_build_name, 
                item_id = p_item_id, 
                score_per_goal = p_score_per_goal
            WHERE build_id = p_build_id;
        END;
        """)

    op.execute("""
        CREATE PROCEDURE DeleteBuild(IN p_build_id INT)
        BEGIN
            DELETE FROM builds WHERE build_id = p_build_id;
        END;
        """)

    # ========== Procedures pour BUILD_MODIFIERS ==========
    op.execute("""
        CREATE PROCEDURE AddBuildModifier(
            IN p_build_id INT,
            IN p_modifier_id INT,
            IN p_quantity INT
        )
        BEGIN
            INSERT INTO build_modifiers (build_id, modifier_id, quantity)
            VALUES (p_build_id, p_modifier_id, p_quantity);
        END;
        """)

    op.execute("""
        CREATE PROCEDURE GetBuildModifiers(IN p_build_id INT)
        BEGIN
            SELECT * FROM build_modifiers WHERE build_id = p_build_id;
        END;
        """)

    op.execute("""
        CREATE PROCEDURE DeleteBuildModifiers(IN p_build_id INT)
        BEGIN
            DELETE FROM build_modifiers WHERE build_id = p_build_id;
        END;
        """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('build_modifiers')
    op.drop_index(op.f('ix_builds_build_id'), table_name='builds')
    op.drop_table('builds')
    op.drop_index(op.f('ix_modifiers_modifier_id'), table_name='modifiers')
    op.drop_table('modifiers')
    op.drop_index(op.f('ix_items_item_id'), table_name='items')
    op.drop_table('items')

    op.execute("DROP PROCEDURE IF EXISTS AddItem;")
    op.execute("DROP PROCEDURE IF EXISTS GetItem;")
    op.execute("DROP PROCEDURE IF EXISTS UpdateItem;")
    op.execute("DROP PROCEDURE IF EXISTS DeleteItem;")

    op.execute("DROP PROCEDURE IF EXISTS AddModifier;")
    op.execute("DROP PROCEDURE IF EXISTS GetModifier;")
    op.execute("DROP PROCEDURE IF EXISTS UpdateModifier;")
    op.execute("DROP PROCEDURE IF EXISTS DeleteModifier;")

    op.execute("DROP PROCEDURE IF EXISTS AddBuild;")
    op.execute("DROP PROCEDURE IF EXISTS GetBuild;")
    op.execute("DROP PROCEDURE IF EXISTS UpdateBuild;")
    op.execute("DROP PROCEDURE IF EXISTS DeleteBuild;")

    op.execute("DROP PROCEDURE IF EXISTS AddBuildModifier;")
    op.execute("DROP PROCEDURE IF EXISTS GetBuildModifiers;")
    op.execute("DROP PROCEDURE IF EXISTS DeleteBuildModifiers;")
    # ### end Alembic commands ###
